import numpy as np

# A = np.array([[1, 2, 3],
#    [1 / 2, 1, 2],
#    [1/3, 1/2, 1]])
A = np.array([
              [1, 1/2, 1/3,1/4,1/5,1/6,1/7,1/8,1/9,1/10],
              [2, 1, 2/3,2/4,2/5,2/6,2/7,2/8,2/9,2/10],
              [3, 3/2, 3 / 3, 3 / 4, 3 / 5, 3 / 6, 3 / 7, 3/ 8, 3 / 9, 3 / 10],
              [4, 4/2, 4 / 3, 4 / 4, 4 / 5, 4 / 6, 4 / 7, 4 / 8, 4 / 9, 4 / 10],
              [5, 5/2, 5 / 3, 5 / 4, 5 / 5, 5 / 6, 5 / 7, 5/ 8, 5 / 9, 5 / 10],
              [6, 6/2, 6 / 3, 6 / 4, 6 / 5, 6 / 6, 6 / 7, 6 / 8, 6 / 9, 6 / 10],
              [7, 7 / 2, 7 / 3, 7 / 4, 7 / 5, 7 / 6, 7 / 7, 7 / 8, 7 / 9, 7 / 10],
              [8, 8 / 2, 8 / 3, 8 / 4, 8 / 5, 8 / 6, 8 / 7, 8 / 8, 8 / 9, 8 / 10],
              [9, 9 / 2, 9 / 3, 9 / 4, 9 / 5, 9 / 6, 9 / 7, 9 / 8, 9 / 9, 9 / 10],
              [10, 10 / 2, 10 / 3, 10 / 4, 10 / 5, 10 / 6, 10 / 7, 10 / 8, 10 / 9, 10 / 10]
])
# A = A.T
# print(A)
m=len(A)                                    #获取指标个数
n=len(A[0])
RI=[0, 0, 0.52, 0.89, 1.12, 1.26, 1.36, 1.41, 1.46, 1.49, 1.52] #这是一个参考指标

R= np.linalg.matrix_rank(A)                #求判断矩阵的秩
V,D=np.linalg.eig(A)                       #求判断矩阵的特征值和特征向量，V特征值，D特征向量；
list1 = list(V)
B= np.max(list1)                           #最大特征值
index = list1.index(B)
C = D[:, index]                            #对应特征向量
CI=(B-n)/(n-1)                             #计算一致性检验指标CI
CR=CI/RI[n]
if CR<0.10:
    print("CI=", CI)
    print("CR=", CR)
    print('对比矩阵A通过一致性检验，各向量权重向量Q为：')
    sum=np.sum(C)

    Q=C/sum                               #特征向量标准化
    print(Q) #  输出权重向量
    total = 0
    for ele in range(0, len(Q)):
        total = total + Q[ele]

    print("列表元素之和为: ", total)
else:
    print("对比矩阵A未通过一致性检验，需对对比矩阵A重新构造")
